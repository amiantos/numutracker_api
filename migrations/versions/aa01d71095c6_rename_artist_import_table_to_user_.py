"""rename artist_import table to user_artist_import

Revision ID: aa01d71095c6
Revises: f40c26a39c78
Create Date: 2019-02-03 22:00:07.851146

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aa01d71095c6'
down_revision = 'f40c26a39c78'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_artist_import',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('import_name', sa.String(length=100), nullable=False),
    sa.Column('import_mbid', sa.String(length=36), nullable=True),
    sa.Column('import_method', sa.String(length=36), nullable=True),
    sa.Column('found_mbid', sa.String(length=36), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_checked', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['found_mbid'], ['artist.mbid'], onupdate='CASCADE', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('user_id', 'import_name')
    )
    op.create_index(op.f('ix_user_artist_import_user_id'), 'user_artist_import', ['user_id'], unique=False)
    op.create_table('user_notification',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('release_mbid', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('date_sent', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['release_mbid'], ['release.mbid'], onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'release_mbid')
    )
    op.create_index(op.f('ix_user_notification_date_created'), 'user_notification', ['date_created'], unique=False)
    op.create_index(op.f('ix_user_notification_type'), 'user_notification', ['type'], unique=False)
    op.drop_index('ix_user_notifications_date_created', table_name='user_notifications')
    op.drop_index('ix_user_notifications_type', table_name='user_notifications')
    op.drop_table('user_notifications')
    op.drop_index('ix_artist_import_user_id', table_name='artist_import')
    op.drop_table('artist_import')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist_import',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('import_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('import_mbid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('import_method', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('found_mbid', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('date_checked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['found_mbid'], ['artist.mbid'], name='artist_import_found_mbid_fkey', onupdate='CASCADE', ondelete='SET NULL', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='artist_import_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('user_id', 'import_name', name='artist_import_pkey')
    )
    op.create_index('ix_artist_import_user_id', 'artist_import', ['user_id'], unique=False)
    op.create_table('user_notifications',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('release_mbid', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('date_sent', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['release_mbid'], ['release.mbid'], name='user_notifications_release_mbid_fkey', onupdate='CASCADE', ondelete='CASCADE', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_notifications_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'release_mbid', name='user_notifications_pkey')
    )
    op.create_index('ix_user_notifications_type', 'user_notifications', ['type'], unique=False)
    op.create_index('ix_user_notifications_date_created', 'user_notifications', ['date_created'], unique=False)
    op.drop_index(op.f('ix_user_notification_type'), table_name='user_notification')
    op.drop_index(op.f('ix_user_notification_date_created'), table_name='user_notification')
    op.drop_table('user_notification')
    op.drop_index(op.f('ix_user_artist_import_user_id'), table_name='user_artist_import')
    op.drop_table('user_artist_import')
    # ### end Alembic commands ###
